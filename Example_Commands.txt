1. Setup
2. Run source activate allennlp
3.

######
simple_tagger
######

mn=tagger_crf_template
gpu=1
./all_taggers.sh $mn $gpu

./tagger.sh sem_semcor "$mn" "$gpu"
./tagger.sh semtr_semtraits "$mn" "$gpu"
./tagger.sh mwe_streusle "$mn" "$gpu"
./tagger.sh smwe_streusle "$mn" "$gpu"
./tagger.sh supsense_streusle "$mn" "$gpu"
./tagger.sh chunk-iobes_conll03 "$mn" "$gpu"
./tagger.sh ner_conll03 "$mn" "$gpu"
./tagger.sh com_broadcast1 "$mn" "$gpu"
./tagger.sh com_broadcast2 "$mn" "$gpu"
./tagger.sh com_broadcast3 "$mn" "$gpu"
./tagger.sh ccg_ccg "$mn" "$gpu"

68
mn=tagger_crf_template
gpu=0
./tagger.sh upos_uni "$mn" "$gpu"
./tagger.sh upos_streusle "$mn" "$gpu"
./tagger.sh xpos_streusle "$mn" "$gpu"
./tagger.sh xpos_uni "$mn" "$gpu"
./tagger.sh xpos_conll03 "$mn" "$gpu"
./tagger.sh chunk_conll02 "$mn" "$gpu"
./tagger.sh chunk_conll03 "$mn" "$gpu"

61
DATADIR=./dataset/multi_tagger_testing
TMPDIR=/tmp/tagger
TASK_NAME=taskembtagger
CUDA=0
for ext in "upos" "xpos" "uni" "conll03" "uposchunk"
do
MODEL=task_prepend_embedding_tagger_"$ext"
rm -r "$TMPDIR"/"$TASK_NAME"_"$MODEL"
python -m allennlp.run train json/"$MODEL".json \
--serialization-dir "$TMPDIR"/"$TASK_NAME"_"$MODEL" \
--cuda-device "$CUDA" \
--train "$DATADIR"/train \
--dev "$DATADIR"/dev \
--test "$DATADIR"/test \
 > "$TMPDIR"/"$TASK_NAME"_"$MODEL"_log
done
 
62
DATADIR=./dataset/multi_tagger_testing
TMPDIR=/tmp/tagger
TASK_NAME=taskembtagger
CUDA=2
for ext in "upos" "xpos" "uni" "conll03" "uposchunk"
do
MODEL=task_embedding_tagger_"$ext"
rm -r "$TMPDIR"/"$TASK_NAME"_"$MODEL"
python -m allennlp.run train json/"$MODEL".json \
--serialization-dir "$TMPDIR"/"$TASK_NAME"_"$MODEL" \
--cuda-device "$CUDA" \
--train "$DATADIR"/train \
--dev "$DATADIR"/dev \
--test "$DATADIR"/test \
 > "$TMPDIR"/"$TASK_NAME"_"$MODEL"_log
done

64
DATADIR=./dataset/multi_tagger_testing
TMPDIR=/tmp/tagger
TASK_NAME=multitagger
CUDA=2
for ext in "upos" "xpos" "uni" "conll03" "uposchunk"
do
MODEL=multi_"$ext"
rm -r "$TMPDIR"/"$TASK_NAME"_"$MODEL"
python -m allennlp.run train json/"$MODEL".json \
--serialization-dir "$TMPDIR"/"$TASK_NAME"_"$MODEL" \
--cuda-device "$CUDA" \
--train "$DATADIR"/train \
--dev "$DATADIR"/dev \
--test "$DATADIR"/test \
 > "$TMPDIR"/"$TASK_NAME"_"$MODEL"_log
done
 
# Evluation 
python -m allennlp.run evaluate /tmp/tutorials/getting_started/model.tar.gz --evaluation-data-file 

# Utils
grep 'word' filename
grep 'word' file1 file2 file3
grep 'string1 string2'  filename
cat otherfile | grep 'something'
command | grep 'something'
command option1 | grep 'data'
grep --color 'data' fileName


